#!/usr/bin/env bash

# Get Path to script folder
DIR="$( cd "$( dirname "$0" )" && pwd )"
# Fix path in case of symlinks
DIR=$(cd "$DIR" && pwd -P)

# Check for .dotfiles file and add symlink
dotfiles="$HOME/.dotfiles"
if [ -L $dotfiles ]; then
	echo "Removing existing $dotfiles symlink"
	rm $dotfiles
fi
if [ -d $dotfiles ]; then
	echo "Found existing $dotfiles folder. Skipping directory."
else
	echo "Linking $DIR => $dotfiles"
	ln -s "$DIR" "$dotfiles"
fi

# Recursively map dotfiles to home directory
echo "Installing individual dotfiles..."
while IFS= read -d $'\0' -r file ; do
	b=$(basename $file)
	c="$HOME/$b"
	d="$file"
	if [ -L $c ]; then
		rm $c
	fi
	if [ -f $c ]; then
		echo -e "Kept existing:\t$d"
	else
		ln -s "$d" "$c"
		echo -e "Link created:\t$d"
	fi
done < <(find "$DIR" \( -iname ".*" ! -iname ".gitignore" ! -iname ".git" ! -iname ".gitmodules" ! -iname "*.swp" \) -print0)

# Throw in a .localrc if needed
if [ ! -e $HOME/.localrc ]; then
	echo -e "# This is your own .localrc file for your SUPER SECRET STUFF" > $HOME/.localrc
fi

# Load up new bash profile
echo "Loading Bash Profile"
source ~/.bash_profile

if [ ! -f "$HOME/.vim/autoload/plug.vim" ]; then
	curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
		https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi

if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
	git clone https://github.com/tmux-plugins/tpm "$HOME/.tmux/plugins/tpm"
	if ! { [ "$TERM" = "screen" ] && [ -n "$TMUX" ]; } then
		tmux source-file "$HOME/.tmux.conf"
	fi
fi

# Vagrant configuration
VAGRANT_DIR="$HOME/.vagrant.d"
if [ ! -d "$VAGRANT_DIR" ]; then
	mkdir -p "$VAGRANT_DIR/scripts"
fi

if [ -L "$VAGRANT_DIR/Vagrantfile" ]; then
	rm "$VAGRANT_DIR/Vagrantfile"
fi
if [ -f "$VAGRANT_DIR/Vagrantfile"  ]; then
	echo -e "Kept existing Vagrantfile"
else
	ln -s "$DIR/vagrant/Vagrantfile" "$VAGRANT_DIR/Vagrantfile"
fi

if [ -L "$VAGRANT_DIR/scripts/provision" ]; then
	rm "$VAGRANT_DIR/scripts/provision"
fi
if [ -f "$VAGRANT_DIR/scripts/provision"  ]; then
	echo -e "Kept existing provisioner:"
else
	ln -s "$DIR/vagrant/provision" "$VAGRANT_DIR/scripts/provision"
fi
